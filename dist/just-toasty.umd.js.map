{"version":3,"file":"just-toasty.umd.js","sources":["../src/index.js"],"sourcesContent":["const WORDS_PER_SECOND = 1.6\nconst ONE_SECOND = 1000\n\nfunction css(elem, rules = {}) {\n  Object.keys(rules).forEach(key => {\n    elem.style[key] = rules[key]\n  })\n}\n\n// https://stackoverflow.com/a/17980070/7027045\nfunction stripHTML(html = '') {\n   var tmp = document.implementation.createHTMLDocument(\"New\").body;\n   tmp.innerHTML = html;\n   return tmp.textContent || tmp.innerText || \"\";\n}\n\nfunction getDurationBasedOnWords(content) {\n  const words = stripHTML(content).split(' ')\n  return words.length * ONE_SECOND / WORDS_PER_SECOND\n}\n\nfunction toast(\n  content = '',\n  opts = {}\n) {\n  const {\n    className = '',\n    duration = getDurationBasedOnWords(content),\n    target = 'body',\n    offset = 15,\n    styles = {},\n    selector = 'just-toasty',\n    cb = () => { }\n  } = typeof opts === 'number' ? { duration: opts } : opts\n\n  const [vert, hor] = ['top', 'right']\n  const targetElem = document.querySelector(target)\n  const elem = document.createElement('div')\n  elem.classList.add(selector)\n  className && elem.classList.add(className)\n  elem.innerHTML = content\n\n  css(\n    elem,\n    Object.assign(\n      {\n        [hor]: '15px',\n        opacity: 1,\n        padding: '1em 1.5em',\n        zIndex: 9999,\n        color: '#fff',\n        background: 'rgba(0,0,10,0.8)',\n        display: 'inline-block',\n        position: 'fixed',\n        borderRadius: '.2em',\n        top: '-100px',\n        fontFamily: 'inherit',\n        transition: 'all 0.4s ease-out'\n      },\n      styles\n    )\n  )\n\n  targetElem.insertBefore(elem, targetElem.firstChild)\n\n  let topOffset = offset\n\n  document.querySelectorAll(`.${selector}`).forEach(elem => {\n    const height = elem.clientHeight\n    css(elem, {\n      [vert]: topOffset + 'px'\n    })\n    topOffset += height + offset\n  })\n\n  setTimeout(function () {\n    const width = elem.offsetWidth\n    css(elem, {\n      [hor]: '-' + width + 'px',\n      opacity: 0\n    })\n    setTimeout(() => {\n      elem.remove()\n      cb()\n    }, 1000)\n  }, duration)\n\n  return elem\n}\n\nexport default toast\n"],"names":["const","WORDS_PER_SECOND","ONE_SECOND","css","elem","rules","Object","keys","forEach","key","style","getDurationBasedOnWords","content","html","tmp","document","implementation","createHTMLDocument","body","innerHTML","textContent","innerText","stripHTML","split","length","opts","duration","targetElem","querySelector","target","createElement","classList","add","selector","className","assign","hor","opacity","padding","zIndex","color","background","display","position","borderRadius","top","fontFamily","transition","styles","insertBefore","firstChild","let","topOffset","offset","querySelectorAll","height","clientHeight","vert","setTimeout","offsetWidth","remove","cb"],"mappings":"qKAAAA,IAAMC,EAAmB,IACnBC,EAAa,IAEnB,SAASC,EAAIC,EAAMC,sBACjBC,OAAOC,KAAKF,GAAOG,iBAAQC,GACzBL,EAAKM,MAAMD,GAAOJ,EAAMI,KAW5B,SAASE,EAAwBC,GAE/B,OARF,SAAmBC,kBAAO,IACvB,IAAIC,EAAMC,SAASC,eAAeC,mBAAmB,OAAOC,KAE5D,OADAJ,EAAIK,UAAYN,EACTC,EAAIM,aAAeN,EAAIO,WAAa,GAI9BC,CAAUV,GAASW,MAAM,KAC1BC,OAAStB,EAAaD,SAGrC,SACEW,EACAa,wBADU,uBAGV,MAQoB,iBAATA,GAAsBC,SAAUD,GAASA,+BAPtC,oCACDd,EAAwBC,kCAC1B,sCACA,sEAEE,uDAIb,OAAqB,MAAO,uBACtBe,EAAaZ,SAASa,cAAcC,GACpCzB,EAAOW,SAASe,cAAc,OACpC1B,EAAK2B,UAAUC,IAAIC,GACnBC,GAAa9B,EAAK2B,UAAUC,IAAIE,GAChC9B,EAAKe,UAAYP,EAEjBT,EACEC,EACAE,OAAO6B,eAEFC,GAAM,SACPC,QAAS,IACTC,QAAS,cACTC,OAAQ,OACRC,MAAO,SACPC,WAAY,qBACZC,QAAS,iBACTC,SAAU,UACVC,aAAc,SACdC,IAAK,WACLC,WAAY,YACZC,WAAY,uBAEdC,IAIJrB,EAAWsB,aAAa7C,EAAMuB,EAAWuB,YAEzCC,IAAIC,EAAYC,EAsBhB,OApBAtC,SAASuC,qBAAqBrB,GAAYzB,iBAAQJ,SAC1CmD,EAASnD,EAAKoD,aACpBrD,EAAIC,UACDqD,GAAOL,EAAY,SAEtBA,GAAaG,EAASF,IAGxBK,WAAW,iBAETvD,EAAIC,UACDgC,GAAM,IAFKhC,EAAKuD,YAEI,OACrBtB,QAAS,MAEXqB,sBACEtD,EAAKwD,SACLC,KACC,MACFnC,GAEItB"}